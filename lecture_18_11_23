===================> Сети <====================
- работаем с IPv4

ifconfig -A # можно посмотреть сконфигурированные адресса
vio0: глобальный адрес
enc0, wg1 - vpn
pflog0 - отражаются сетевые пакеты

nc -l 127.0.0.1 12345 # связывает сетевой подключение и ввод/вывод
nc 127.0.0.1 12345 # в режиме клиента

nc ya.ru 80
GET / HTTP/1.1
Host: ya.ru

===========> Код клиентской части <===========
socket(AF_INET, SOCK_STREAM, 0)
SOCK_STREAM - потоковый сокет
SOCK_DGRAM - не контролирует порядок передачи пакетов 
SOCK_RAW - сырой сокет, т.е. позволяет напрямую сформировать сетевой пакет
SOCK_SEQPACKET - обмен отдельными пакетами, гарантируется факт доставки
- третий аргумент обычно ноль

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
connect(sock, sa, sizeof(sin))
               sockaddr_in                     vs.             sa (sockaddr)
есть поле с непосредственным сетевым адресом          непосредствеено использует порт
                                                      структура хранящая адреса
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sin.sin_len = sizeof(sin) # можно выкинуть
вывод в STDOUT_FILENO <- небуфферизованный вывод
htons # host to network short (переводит в BE)
============> finale <===============

doas tcpdump -ni lo0
	-tcpdump позволяет слушать, что происходит в интерфейсе(?)
в сетях используется BE (Big Endian), а в Intel архитектуре LE (обратный порядок чисел - младший байт по младшему адресу)
http = 80 порт

===========> Код серверной части <===========
нет connect
bind(sock, sa, sizeoff)
в результате появляется новый сокет
accept
